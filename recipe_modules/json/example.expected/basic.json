[
  {
    "cmd": [
      "echo",
      "[1, 2, 3]"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "echo1",
    "stdout": "/path/to/tmp/json",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  1, @@@",
      "@@@STEP_LOG_LINE@json.output@  2, @@@",
      "@@@STEP_LOG_LINE@json.output@  3@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "echo",
      "[2, 3, 4]"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "echo2",
    "stdout": "/path/to/tmp/json",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  2, @@@",
      "@@@STEP_LOG_LINE@json.output@  3, @@@",
      "@@@STEP_LOG_LINE@json.output@  4@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport json\nimport sys\nwith open(sys.argv[1], 'w') as f:\n  f.write(json.dumps([1, 2, 3]))\nwith open(sys.argv[2], 'w') as f:\n  f.write(json.dumps(['x', 'y', u'\\ufeff\\uff5a']))\n",
      "/path/to/tmp/json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "foo",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@[@@@",
      "@@@STEP_LOG_LINE@json.output@  \"x\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"y\", @@@",
      "@@@STEP_LOG_LINE@json.output@  \"\\ufeff\\uff5a\"@@@",
      "@@@STEP_LOG_LINE@json.output@]@@@",
      "@@@STEP_LOG_END@json.output@@@",
      "@@@STEP_LOG_LINE@python.inline@@@@",
      "@@@STEP_LOG_LINE@python.inline@import json@@@",
      "@@@STEP_LOG_LINE@python.inline@import sys@@@",
      "@@@STEP_LOG_LINE@python.inline@with open(sys.argv[1], 'w') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@  f.write(json.dumps([1, 2, 3]))@@@",
      "@@@STEP_LOG_LINE@python.inline@with open(sys.argv[2], 'w') as f:@@@",
      "@@@STEP_LOG_LINE@python.inline@  f.write(json.dumps(['x', 'y', u'\\ufeff\\uff5a']))@@@",
      "@@@STEP_LOG_END@python.inline@@@"
    ]
  },
  {
    "cmd": [
      "cat",
      "{\"x\": 1, \"y\": 2}"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "json through",
    "stdout": "/path/to/tmp/json",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"x\": 1, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"y\": 2@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "cat",
      "{\"x\": 1, \"y\": 2}"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "write json to file",
    "stdout": "[SLAVE_BUILD]/temp.json"
  },
  {
    "cmd": [
      "python",
      "-u",
      "\nimport shutil\nimport sys\nshutil.copy(sys.argv[1], sys.argv[2])\n",
      "[SLAVE_BUILD]/temp.json",
      "/path/to/tmp/json"
    ],
    "cwd": "[SLAVE_BUILD]",
    "name": "read json from file we just wrote",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"x\": 1, @@@",
      "@@@STEP_LOG_LINE@json.output@  \"y\": 2@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "name": "$result",
    "recipe_result": null,
    "status_code": 0
  }
]