[
  {
    "cmd": [
      "cipd",
      "ensure",
      "-root",
      "[CACHE]/led",
      "-ensure-file",
      "infra/tools/luci/led/${platform} latest",
      "-max-threads",
      "0",
      "-json-output",
      "/path/to/tmp/json"
    ],
    "name": "ensure_installed",
    "~followup_annotations": [
      "@@@STEP_LOG_LINE@json.output@{@@@",
      "@@@STEP_LOG_LINE@json.output@  \"result\": {@@@",
      "@@@STEP_LOG_LINE@json.output@    \"\": [@@@",
      "@@@STEP_LOG_LINE@json.output@      {@@@",
      "@@@STEP_LOG_LINE@json.output@        \"instance_id\": \"resolved-instance_id-of-latest----------\", @@@",
      "@@@STEP_LOG_LINE@json.output@        \"package\": \"infra/tools/luci/led/resolved-platform\"@@@",
      "@@@STEP_LOG_LINE@json.output@      }@@@",
      "@@@STEP_LOG_LINE@json.output@    ]@@@",
      "@@@STEP_LOG_LINE@json.output@  }@@@",
      "@@@STEP_LOG_LINE@json.output@}@@@",
      "@@@STEP_LOG_END@json.output@@@"
    ]
  },
  {
    "cmd": [
      "[CACHE]/led/led",
      "get-builder",
      "fake/bucket:no-exist"
    ],
    "name": "led get-builder",
    "~followup_annotations": [
      "@@@STEP_LOG_END@proto.output (invalid)@@@",
      "@@@STEP_LOG_LINE@proto.output (exception)@Failed to load JSON: No JSON object could be decoded.@@@",
      "@@@STEP_LOG_END@proto.output (exception)@@@",
      "@@@STEP_FAILURE@@@"
    ]
  },
  {
    "cmd": [
      "[CACHE]/led/led",
      "get-build",
      "123456789"
    ],
    "name": "led get-build",
    "~followup_annotations": [
      "@@@STEP_LOG_END@proto.output (invalid)@@@",
      "@@@STEP_LOG_LINE@proto.output (exception)@Failed to load JSON: No JSON object could be decoded.@@@",
      "@@@STEP_LOG_END@proto.output (exception)@@@",
      "@@@STEP_FAILURE@@@"
    ]
  },
  {
    "cmd": [
      "[CACHE]/led/led",
      "get-swarm",
      "deadbeef"
    ],
    "name": "led get-swarm",
    "~followup_annotations": [
      "@@@STEP_LOG_END@proto.output (invalid)@@@",
      "@@@STEP_LOG_LINE@proto.output (exception)@Failed to load JSON: No JSON object could be decoded.@@@",
      "@@@STEP_LOG_END@proto.output (exception)@@@",
      "@@@STEP_FAILURE@@@"
    ]
  },
  {
    "name": "$result"
  }
]